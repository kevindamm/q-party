// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// ChallengesColumns holds the columns for the "challenges" table.
	ChallengesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "media", Type: field.TypeString},
		{Name: "prompt", Type: field.TypeString},
		{Name: "response", Type: field.TypeString},
		{Name: "value", Type: field.TypeInt},
	}
	// ChallengesTable holds the schema information for the "challenges" table.
	ChallengesTable = &schema.Table{
		Name:       "challenges",
		Columns:    ChallengesColumns,
		PrimaryKey: []*schema.Column{ChallengesColumns[0]},
	}
	// ChallengeGroupsColumns holds the columns for the "challenge_groups" table.
	ChallengeGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ChallengeGroupsTable holds the schema information for the "challenge_groups" table.
	ChallengeGroupsTable = &schema.Table{
		Name:       "challenge_groups",
		Columns:    ChallengeGroupsColumns,
		PrimaryKey: []*schema.Column{ChallengeGroupsColumns[0]},
	}
	// CategoryChallengeGroupsColumns holds the columns for the "category_challenge_groups" table.
	CategoryChallengeGroupsColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "challenge_group_id", Type: field.TypeInt},
	}
	// CategoryChallengeGroupsTable holds the schema information for the "category_challenge_groups" table.
	CategoryChallengeGroupsTable = &schema.Table{
		Name:       "category_challenge_groups",
		Columns:    CategoryChallengeGroupsColumns,
		PrimaryKey: []*schema.Column{CategoryChallengeGroupsColumns[0], CategoryChallengeGroupsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_challenge_groups_category_id",
				Columns:    []*schema.Column{CategoryChallengeGroupsColumns[0]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "category_challenge_groups_challenge_group_id",
				Columns:    []*schema.Column{CategoryChallengeGroupsColumns[1]},
				RefColumns: []*schema.Column{ChallengeGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ChallengeGroupChallengesColumns holds the columns for the "challenge_group_challenges" table.
	ChallengeGroupChallengesColumns = []*schema.Column{
		{Name: "challenge_group_id", Type: field.TypeInt},
		{Name: "challenge_id", Type: field.TypeInt},
	}
	// ChallengeGroupChallengesTable holds the schema information for the "challenge_group_challenges" table.
	ChallengeGroupChallengesTable = &schema.Table{
		Name:       "challenge_group_challenges",
		Columns:    ChallengeGroupChallengesColumns,
		PrimaryKey: []*schema.Column{ChallengeGroupChallengesColumns[0], ChallengeGroupChallengesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "challenge_group_challenges_challenge_group_id",
				Columns:    []*schema.Column{ChallengeGroupChallengesColumns[0]},
				RefColumns: []*schema.Column{ChallengeGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "challenge_group_challenges_challenge_id",
				Columns:    []*schema.Column{ChallengeGroupChallengesColumns[1]},
				RefColumns: []*schema.Column{ChallengesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EpisodesColumns holds the columns for the "episodes" table.
	EpisodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "aired", Type: field.TypeTime},
		{Name: "difficulty", Type: field.TypeEnum, Enums: []string{"UNKNOWN", "Kids", "College", "Standard", "Champions"}},
	}
	// EpisodesTable holds the schema information for the "episodes" table.
	EpisodesTable = &schema.Table{
		Name:       "episodes",
		Columns:    EpisodesColumns,
		PrimaryKey: []*schema.Column{EpisodesColumns[0]},
	}
	// EpisodeRoundsColumns holds the columns for the "episode_rounds" table.
	EpisodeRoundsColumns = []*schema.Column{
		{Name: "episode_id", Type: field.TypeInt},
		{Name: "episode_round_id", Type: field.TypeInt},
	}
	// EpisodeRoundsTable holds the schema information for the "episode_rounds" table.
	EpisodeRoundsTable = &schema.Table{
		Name:       "episode_rounds",
		Columns:    EpisodeRoundsColumns,
		PrimaryKey: []*schema.Column{EpisodeRoundsColumns[0], EpisodeRoundsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "episode_rounds_episode_id",
				Columns:    []*schema.Column{EpisodeRoundsColumns[0]},
				RefColumns: []*schema.Column{EpisodesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "episode_rounds_episode_round_id",
				Columns:    []*schema.Column{EpisodeRoundsColumns[1]},
				RefColumns: []*schema.Column{EpisodeRoundsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// EpisodeRoundCategoriesColumns holds the columns for the "episode_round_categories" table.
	EpisodeRoundCategoriesColumns = []*schema.Column{
		{Name: "episode_round_id", Type: field.TypeInt},
		{Name: "challenge_group_id", Type: field.TypeInt},
	}
	// EpisodeRoundCategoriesTable holds the schema information for the "episode_round_categories" table.
	EpisodeRoundCategoriesTable = &schema.Table{
		Name:       "episode_round_categories",
		Columns:    EpisodeRoundCategoriesColumns,
		PrimaryKey: []*schema.Column{EpisodeRoundCategoriesColumns[0], EpisodeRoundCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "episode_round_categories_episode_round_id",
				Columns:    []*schema.Column{EpisodeRoundCategoriesColumns[0]},
				RefColumns: []*schema.Column{EpisodeRoundsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "episode_round_categories_challenge_group_id",
				Columns:    []*schema.Column{EpisodeRoundCategoriesColumns[1]},
				RefColumns: []*schema.Column{ChallengeGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		ChallengesTable,
		ChallengeGroupsTable,
		CategoryChallengeGroupsTable,
		ChallengeGroupChallengesTable,
		EpisodesTable,
		EpisodeRoundsTable,
		EpisodeRoundCategoriesTable,
	}
)

func init() {
	CategoryChallengeGroupsTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryChallengeGroupsTable.ForeignKeys[1].RefTable = ChallengeGroupsTable
	ChallengeGroupChallengesTable.ForeignKeys[0].RefTable = ChallengeGroupsTable
	ChallengeGroupChallengesTable.ForeignKeys[1].RefTable = ChallengesTable
	EpisodeRoundsTable.ForeignKeys[0].RefTable = EpisodesTable
	EpisodeRoundsTable.ForeignKeys[1].RefTable = EpisodeRoundsTable
	EpisodeRoundCategoriesTable.ForeignKeys[0].RefTable = EpisodeRoundsTable
	EpisodeRoundCategoriesTable.ForeignKeys[1].RefTable = ChallengeGroupsTable
}
